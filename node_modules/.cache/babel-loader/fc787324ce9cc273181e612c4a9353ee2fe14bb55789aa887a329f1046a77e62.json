{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anchi\\\\OneDrive\\\\Desktop\\\\react_tutorial\\\\textutils-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const handleUpClick = () => {\n    console.log(\"AUppercased\");\n    setText(text.toUpperCase());\n    props.show(\"Text Set To Uppercase\", 'success');\n\n    //right way to change the variable in react state\n  };\n  const handleLowClick = () => {\n    setText(text.toLowerCase());\n    props.show(\"Text Set To lowerase\", 'success');\n  };\n  const handleClearText = () => {\n    setText('');\n    props.show(\"Text is cleared\", 'success');\n  };\n  const handleReverseText = () => {\n    let newText = '';\n    for (let i = text.length - 1; i >= 0; i--) {\n      newText = newText + text[i];\n    }\n    setText(newText);\n    props.show(\"Text is now reversed\", 'success');\n  };\n  const handleSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(' '));\n    props.show(\"All the extra spaces are cleared\", 'success');\n  };\n  const handleEmail = () => {\n    console.log(\"here's your mail bud\");\n    let a = [];\n    let re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    for (let word of text.split(\" \")) {\n      if (word[0] === '\"' & word[word.length - 1] === '\"') {\n        word = word.slice(1, word.length - 1);\n      }\n      if (re.test(word)) {\n        a.push(word);\n      }\n    }\n    if (a.length > 0) {\n      let outro = \"here is the list of extracted emails : \";\n      setText(outro + a.join('  '));\n    } else {\n      setText('no mail id found');\n    }\n    props.show(\"All the emails are extracted\", 'success');\n  };\n  const handleCopy = () => {\n    let txt = document.getElementById('myBox');\n    txt.select();\n    navigator.clipboard.writeText(txt.value);\n    props.show(\"Text Copied to clipboard\", 'success');\n  };\n  const handleOnChange = event => {\n    // console.log(event.target.value);\n    setText(event.target.value);\n  };\n\n  // text = 'new text'// wrong way to change the variable value in state\n  const countChar = t => {\n    let count = 0;\n    for (let i = 0; i < t.length; i++) {\n      if (t[i] !== \" \") {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n  //counting words using for loop below i did using regex here without using regex\n  // const wordCount = (t)=>{\n  //   let count=0\n  //   space = false\n  //   for(let i=0;i<t.length;i++){\n  //     if (t[i] !== \" \" && !space){\n  //       count = count+1\n  //       space=true\n  //     }else if( t[i]===\" \"){\n  //       space=false\n  //     }\n  //   }\n  //   return count\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"my-3\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form-control bg-${props.mode}  text-${props.mode === 'light' ? 'dark' : 'light'}`,\n          id: \"myBox\",\n          rows: \"8\",\n          value: text,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleUpClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleLowClick,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleClearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleReverseText,\n        children: \"Reverse Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleEmail,\n        children: \"Extract Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n        onClick: handleSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Yout Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"words : \", text.trim(' ').split(/\\s+/)[0] === '' ? 0 : text.trim(' ').split(/\\s+/).length, \", characters : \", countChar(text)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Time to read the sentence in : \", text.trim(' ').split(/\\s+/)[0] === '' ? 0 : text.trim(' ').split(/\\s+/).length * 0.008, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : 'Enter Something to Preview Here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = TextForm;\nTextForm.propTypes = {\n  heading: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","handleUpClick","console","log","toUpperCase","show","handleLowClick","toLowerCase","handleClearText","handleReverseText","newText","i","length","handleSpaces","split","join","handleEmail","a","re","word","slice","test","push","outro","handleCopy","txt","document","getElementById","select","navigator","clipboard","writeText","value","handleOnChange","event","target","countChar","t","count","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","mode","id","rows","onChange","onClick","trim","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/anchi/OneDrive/Desktop/react_tutorial/textutils-app/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    console.log(\"AUppercased\");\r\n    setText(text.toUpperCase());\r\n    props.show(\"Text Set To Uppercase\",'success')\r\n\r\n    //right way to change the variable in react state\r\n  };\r\n  const handleLowClick =  () =>{\r\n    setText(text.toLowerCase());\r\n    props.show(\"Text Set To lowerase\",'success')\r\n  }\r\n  const handleClearText = ()=>{\r\n    setText('')\r\n    props.show(\"Text is cleared\",'success')\r\n  }\r\n  const handleReverseText = ()=>{\r\n    let newText='';\r\n    for (let i=text.length-1;i>=0;i--){\r\n      newText = newText + text[i]\r\n    }\r\n    setText(newText)\r\n    props.show(\"Text is now reversed\",'success')\r\n  }\r\n  const handleSpaces = () =>{\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(' '))\r\n    props.show(\"All the extra spaces are cleared\",'success')\r\n  }\r\n  const handleEmail = ()=>{\r\n    console.log(\"here's your mail bud\")\r\n    let a = [];\r\n    let re =/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    for (let word of text.split(\" \")){\r\n      if (word[0] === '\"' & word[word.length-1]==='\"'){\r\n        word = word.slice(1,word.length-1);\r\n      }\r\n      \r\n      if (re.test(word)){\r\n        a.push(word);\r\n      }\r\n    }\r\n    if (a.length > 0){\r\n      let outro = \"here is the list of extracted emails : \" \r\n      setText(outro +a.join('  '));\r\n    }else{\r\n      setText('no mail id found')\r\n    }\r\n    props.show(\"All the emails are extracted\",'success')\r\n  }\r\n  const handleCopy = () =>{\r\n    let txt = document.getElementById('myBox');\r\n    txt.select();\r\n    navigator.clipboard.writeText(txt.value);\r\n    props.show(\"Text Copied to clipboard\",'success')\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(event.target.value);\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // text = 'new text'// wrong way to change the variable value in state\r\n  const countChar =(t)=>{\r\n    let count=0\r\n    for(let i=0;i<t.length;i++){\r\n      if (t[i] !== \" \"){\r\n        count = count+1\r\n      }\r\n    }\r\n    return count\r\n  }\r\n  //counting words using for loop below i did using regex here without using regex\r\n  // const wordCount = (t)=>{\r\n  //   let count=0\r\n  //   space = false\r\n  //   for(let i=0;i<t.length;i++){\r\n  //     if (t[i] !== \" \" && !space){\r\n  //       count = count+1\r\n  //       space=true\r\n  //     }else if( t[i]===\" \"){\r\n  //       space=false\r\n  //     }\r\n  //   }\r\n  //   return count\r\n  // }\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className=\"my-3\">{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <textarea className={`form-control bg-${props.mode}  text-${props.mode==='light'?'dark':'light'}`}id=\"myBox\"rows=\"8\" value={text} onChange={handleOnChange} ></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleLowClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleClearText}>\r\n          Clear Text\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleReverseText}>\r\n          Reverse Text\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleEmail}>Extract Email</button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n          <h1>Yout Text Summary</h1>\r\n          <p>words : {text.trim(' ').split(/\\s+/)[0] ===''  ?0:text.trim(' ').split(/\\s+/).length}, characters : {countChar(text)}</p>\r\n          <p>Average Time to read the sentence in : {text.trim(' ').split(/\\s+/)[0] ==='' ?0:text.trim(' ').split(/\\s+/).length*0.008} minutes</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length >0 ? text : 'Enter Something to Preview Here'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nTextForm.propTypes = { heading: PropTypes.string.isRequired };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}