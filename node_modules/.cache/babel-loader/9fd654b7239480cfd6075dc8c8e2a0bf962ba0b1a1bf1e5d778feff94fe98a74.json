{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anchi\\\\OneDrive\\\\Desktop\\\\react_tutorial\\\\textutils-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm.js';\nimport Alert from \"./components/Alert.js\";\nimport ColourGrid from \"./components/ColourGrid.js\";\n// import About from \"./components/About.js\"\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n//   // Link\n// } from \"react-router-dom\";\n\n// import About from './components/About.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [darkMode, setDarkmode] = useState('light'); //dark mode enabled or not\n  const [textColor, setTextColor] = useState('dark'); //for text color\n  const [darkModeHead, setHeadDark] = useState('DarkMode');\n  const [alert, setAlert] = useState(null);\n  const changeColor = e => {\n    console.log(e.target.className.split(' ')[1].split('-')[1]);\n    let m = e.target.className.split(' ')[1].split('-')[1];\n    if (darkMode === 'dark') {\n      toggleMode();\n    }\n    if (m === 'primary') {\n      setDarkmode('primary');\n      document.body.style.backgroundColor = 'rgb(0 88 255 / 45%)';\n    } else if (m === 'secondary') {\n      document.body.style.backgroundColor = '#b1b1b1';\n      setDarkmode('secondary');\n    } else if (m === 'danger') {\n      document.body.style.backgroundColor = '#ec7979';\n      setDarkmode('danger');\n    } else if (m === 'success') {\n      document.body.style.backgroundColor = '#aaf4aa';\n      setDarkmode('success');\n    } else if (m === 'warning') {\n      document.body.style.backgroundColor = '#ffff9f';\n      setDarkmode('warning');\n    } else if (m === 'info') {\n      document.body.style.backgroundColor = '#5dddff';\n      setDarkmode('info');\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (darkMode === 'dark') {\n      setDarkmode('light');\n      setTextColor('dark');\n      setHeadDark('DarkMode');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert('Light mode has been enabled', 'success');\n      document.title = 'TextUtils : Home';\n      //////////////\n      // setInterval(function(){\n      //   document.title = 'TextUtils : download It Now'\n      // },1000)\n      // setInterval(function(){\n      //   document.title = 'TextUtils : Virus Attack'\n      // },1500)\n      ///////////////////////////////for test purpose\n    } else {\n      setTextColor('light');\n      setDarkmode('dark');\n      setHeadDark('LightMode');\n      document.body.style.backgroundColor = 'rgb(6 8 29)';\n      document.body.style.color = '#bebebe';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = 'TextUtils : DarkMode';\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <Router>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"WhatIsThisFor\",\n        aboutText: \"More About Company\",\n        mode: darkMode,\n        toggleMode: toggleMode,\n        textColor: textColor,\n        darkModeHead: darkModeHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          my_alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select The Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ColourGrid, {\n          colourCode: changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextForm, {\n          show: showAlert,\n          heading: \"Enter The Text to Analyse Below\",\n          mode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React with Anchin\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n_s(App, \"NI3XLiUouyUlOSRQqsIiOtjTJfA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","ColourGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","darkMode","setDarkmode","textColor","setTextColor","darkModeHead","setHeadDark","alert","setAlert","changeColor","e","console","log","target","className","split","m","toggleMode","document","body","style","backgroundColor","showAlert","message","type","msg","setTimeout","color","title","children","aboutText","mode","fileName","_jsxFileName","lineNumber","columnNumber","my_alert","colourCode","show","heading","_c","$RefreshReg$"],"sources":["C:/Users/anchi/OneDrive/Desktop/react_tutorial/textutils-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm.js';\nimport Alert from \"./components/Alert.js\";\nimport ColourGrid from \"./components/ColourGrid.js\";\n// import About from \"./components/About.js\"\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n//   // Link\n// } from \"react-router-dom\";\n\n// import About from './components/About.js';\nfunction App() {\n  const [darkMode,setDarkmode] = useState('light')//dark mode enabled or not\n  const [textColor,setTextColor] = useState('dark')//for text color\n  const [darkModeHead,setHeadDark] = useState('DarkMode')\n  const [alert,setAlert] = useState(null)\n  \n  const changeColor = (e)=>{\n    console.log(e.target.className.split(' ')[1].split('-')[1])\n    let m = e.target.className.split(' ')[1].split('-')[1]\n    if (darkMode==='dark'){\n      toggleMode()\n    }\n    if (m==='primary'){\n      setDarkmode('primary')\n      document.body.style.backgroundColor = 'rgb(0 88 255 / 45%)'\n    }else if(m==='secondary'){\n      document.body.style.backgroundColor = '#b1b1b1'\n      setDarkmode('secondary')\n    }else if(m==='danger'){\n      document.body.style.backgroundColor = '#ec7979'\n      setDarkmode('danger')\n    }else if(m==='success'){\n      document.body.style.backgroundColor = '#aaf4aa'\n      setDarkmode('success')\n    }else if(m==='warning'){\n      document.body.style.backgroundColor = '#ffff9f'\n      setDarkmode('warning')\n    }else if(m==='info'){\n      document.body.style.backgroundColor = '#5dddff'\n      setDarkmode('info')\n    }\n  }\n\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode = () =>{\n    if (darkMode==='dark'){\n      setDarkmode('light')\n      setTextColor('dark')\n      setHeadDark('DarkMode')\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert('Light mode has been enabled','success')\n      document.title = 'TextUtils : Home'\n      //////////////\n      // setInterval(function(){\n      //   document.title = 'TextUtils : download It Now'\n      // },1000)\n      // setInterval(function(){\n      //   document.title = 'TextUtils : Virus Attack'\n      // },1500)\n      ///////////////////////////////for test purpose\n    }else {\n      setTextColor('light')\n      setDarkmode('dark')\n      setHeadDark('LightMode')\n      document.body.style.backgroundColor = 'rgb(6 8 29)'\n      document.body.style.color = '#bebebe';\n      showAlert('Dark mode has been enabled','success')\n      document.title = 'TextUtils : DarkMode'\n    }\n  }\n  return (\n    // <Router>\n    <>\n      <Navbar title = \"WhatIsThisFor\" aboutText='More About Company' mode={darkMode} toggleMode={toggleMode} textColor = {textColor} darkModeHead = {darkModeHead}/>\n      <div className=\"alert\"><Alert my_alert = {alert}/></div>\n      <div className=\"container\">\n        <h4>Select The Theme</h4>\n        <ColourGrid colourCode ={changeColor}/>\n      </div>\n      \n      <div className=\"container\">\n      <TextForm show = {showAlert} heading='Enter The Text to Analyse Below' mode={darkMode}/>\n      {/* <Routes>\n            <Route exact path=\"/about\" element={<About />}>\n              \n            </Route>\n            <Route exact path=\"/\" element={<TextForm show = {showAlert} heading='Enter The Text to Analyse Below' mode={darkMode}/>}>\n              \n            </Route>\n      </Routes> */}\n        \n      </div>\n    {/* <About />  */}\n    {/* </Router> */}\n    </>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React with Anchin\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}