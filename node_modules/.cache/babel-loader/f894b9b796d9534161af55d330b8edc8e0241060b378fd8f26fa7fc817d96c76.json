{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function TextForm(props){const[text,setText]=useState(\"\");const handleUpClick=()=>{console.log(\"AUppercased\");setText(text.toUpperCase());props.show(\"Text Set To Uppercase\",'success');//right way to change the variable in react state\n};const handleLowClick=()=>{setText(text.toLowerCase());props.show(\"Text Set To lowerase\",'success');};const handleClearText=()=>{setText('');props.show(\"Text is cleared\",'success');};const handleReverseText=()=>{let newText='';for(let i=text.length-1;i>=0;i--){newText=newText+text[i];}setText(newText);props.show(\"Text is now reversed\",'success');};const handleSpaces=()=>{let newText=text.split(/[ ]+/);setText(newText.join(' '));props.show(\"All the extra spaces are cleared\",'success');};const handleEmail=()=>{console.log(\"here's your mail bud\");let a=[];let re=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;for(let word of text.split(\" \")){if(word[0]==='\"'&word[word.length-1]==='\"'){word=word.slice(1,word.length-1);}if(re.test(word)){a.push(word);}}if(a.length>0){let outro=\"here is the list of extracted emails : \";setText(outro+a.join('  '));}else{setText('no mail id found');}props.show(\"All the emails are extracted\",'success');};const handleCopy=()=>{let txt=document.getElementById('myBox');txt.select();navigator.clipboard.writeText(txt.value);props.show(\"Text Copied to clipboard\",'success');};const handleOnChange=event=>{// console.log(event.target.value);\nsetText(event.target.value);};// text = 'new text'// wrong way to change the variable value in state\nconst countChar=t=>{let count=0;for(let i=0;i<t.length;i++){if(t[i]!==\" \"){count=count+1;}}return count;};//counting words using for loop below i did using regex here without using regex\n// const wordCount = (t)=>{\n//   let count=0\n//   space = false\n//   for(let i=0;i<t.length;i++){\n//     if (t[i] !== \" \" && !space){\n//       count = count+1\n//       space=true\n//     }else if( t[i]===\" \"){\n//       space=false\n//     }\n//   }\n//   return count\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"my-3\",children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:`form-control bg-${props.mode}  text-${props.mode==='light'?'dark':'light'}`,id:\"myBox\",rows:\"8\",value:text,onChange:handleOnChange})}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleUpClick,children:\"Convert to UpperCase\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleLowClick,children:\"Convert to LowerCase\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleClearText,children:\"Clear Text\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleReverseText,children:\"Reverse Text\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleEmail,children:\"Extract Email\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleCopy,children:\"Copy Text\"}),/*#__PURE__*/_jsx(\"button\",{className:`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`,onClick:handleSpaces,children:\"Remove Extra Spaces\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-3\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Yout Text Summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"words : \",text.trim(' ').split(/\\s+/)[0]===''?0:text.trim(' ').split(/\\s+/).length,\", characters : \",countChar(text)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Average Time to read the sentence in : \",text.trim(' ').split(/\\s+/)[0]===''?0:text.trim(' ').split(/\\s+/).length*0.008,\" minutes\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:'Enter Something to Preview Here'})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TextForm","props","text","setText","handleUpClick","console","log","toUpperCase","show","handleLowClick","toLowerCase","handleClearText","handleReverseText","newText","i","length","handleSpaces","split","join","handleEmail","a","re","word","slice","test","push","outro","handleCopy","txt","document","getElementById","select","navigator","clipboard","writeText","value","handleOnChange","event","target","countChar","t","count","children","className","heading","mode","id","rows","onChange","onClick","trim"],"sources":["C:/Users/anchi/OneDrive/Desktop/react_tutorial/textutils-app/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    console.log(\"AUppercased\");\r\n    setText(text.toUpperCase());\r\n    props.show(\"Text Set To Uppercase\",'success')\r\n\r\n    //right way to change the variable in react state\r\n  };\r\n  const handleLowClick =  () =>{\r\n    setText(text.toLowerCase());\r\n    props.show(\"Text Set To lowerase\",'success')\r\n  }\r\n  const handleClearText = ()=>{\r\n    setText('')\r\n    props.show(\"Text is cleared\",'success')\r\n  }\r\n  const handleReverseText = ()=>{\r\n    let newText='';\r\n    for (let i=text.length-1;i>=0;i--){\r\n      newText = newText + text[i]\r\n    }\r\n    setText(newText)\r\n    props.show(\"Text is now reversed\",'success')\r\n  }\r\n  const handleSpaces = () =>{\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(' '))\r\n    props.show(\"All the extra spaces are cleared\",'success')\r\n  }\r\n  const handleEmail = ()=>{\r\n    console.log(\"here's your mail bud\")\r\n    let a = [];\r\n    let re =/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    for (let word of text.split(\" \")){\r\n      if (word[0] === '\"' & word[word.length-1]==='\"'){\r\n        word = word.slice(1,word.length-1);\r\n      }\r\n      \r\n      if (re.test(word)){\r\n        a.push(word);\r\n      }\r\n    }\r\n    if (a.length > 0){\r\n      let outro = \"here is the list of extracted emails : \" \r\n      setText(outro +a.join('  '));\r\n    }else{\r\n      setText('no mail id found')\r\n    }\r\n    props.show(\"All the emails are extracted\",'success')\r\n  }\r\n  const handleCopy = () =>{\r\n    let txt = document.getElementById('myBox');\r\n    txt.select();\r\n    navigator.clipboard.writeText(txt.value);\r\n    props.show(\"Text Copied to clipboard\",'success')\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(event.target.value);\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // text = 'new text'// wrong way to change the variable value in state\r\n  const countChar =(t)=>{\r\n    let count=0\r\n    for(let i=0;i<t.length;i++){\r\n      if (t[i] !== \" \"){\r\n        count = count+1\r\n      }\r\n    }\r\n    return count\r\n  }\r\n  //counting words using for loop below i did using regex here without using regex\r\n  // const wordCount = (t)=>{\r\n  //   let count=0\r\n  //   space = false\r\n  //   for(let i=0;i<t.length;i++){\r\n  //     if (t[i] !== \" \" && !space){\r\n  //       count = count+1\r\n  //       space=true\r\n  //     }else if( t[i]===\" \"){\r\n  //       space=false\r\n  //     }\r\n  //   }\r\n  //   return count\r\n  // }\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className=\"my-3\">{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <textarea className={`form-control bg-${props.mode}  text-${props.mode==='light'?'dark':'light'}`}id=\"myBox\"rows=\"8\" value={text} onChange={handleOnChange} ></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleLowClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleClearText}>\r\n          Clear Text\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleReverseText}>\r\n          Reverse Text\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleEmail}>Extract Email</button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n        <button className={`btn btn-${props.mode==='light'?'primary':'light'} mx-1 my-1`} onClick={handleSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n          <h1>Yout Text Summary</h1>\r\n          <p>words : {text.trim(' ').split(/\\s+/)[0] ===''  ?0:text.trim(' ').split(/\\s+/).length}, characters : {countChar(text)}</p>\r\n          <p>Average Time to read the sentence in : {text.trim(' ').split(/\\s+/)[0] ==='' ?0:text.trim(' ').split(/\\s+/).length*0.008} minutes</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length >0 ? text : 'Enter Something to Preview Here'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nTextForm.propTypes = { heading: PropTypes.string.isRequired };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}